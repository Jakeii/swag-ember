{"version":3,"sources":["vendor/ember-cli/app-prefix.js","swag-ember/adapters/application.js","swag-ember/adapters/swagmap.js","swag-ember/app.js","swag-ember/components/app-version.js","swag-ember/components/swag-map.js","swag-ember/components/swag-swagifact.js","swag-ember/controllers/application.js","swag-ember/controllers/array.js","swag-ember/controllers/index.js","swag-ember/controllers/object.js","swag-ember/controllers/swagmap.js","swag-ember/helpers/fa-icon.js","swag-ember/initializers/app-version.js","swag-ember/initializers/export-application-global.js","swag-ember/models/skill.js","swag-ember/models/swagifact.js","swag-ember/models/swagmap.js","swag-ember/models/user.js","swag-ember/router.js","swag-ember/routes/application.js","swag-ember/routes/index.js","swag-ember/routes/swagmap.js","swag-ember/serializers/application.js","swag-ember/services/current-user.js","swag-ember/services/lrs.js","swag-ember/templates/application.js","swag-ember/templates/components/login-form.js","swag-ember/templates/components/swag-map.js","swag-ember/templates/components/swag-swagifact.js","swag-ember/templates/index.js","swag-ember/templates/swagmap.js","swag-ember/tests/adapters/application.jshint.js","swag-ember/tests/adapters/swagmap.jshint.js","swag-ember/tests/app.jshint.js","swag-ember/tests/components/swag-map.jshint.js","swag-ember/tests/components/swag-swagifact.jshint.js","swag-ember/tests/controllers/application.jshint.js","swag-ember/tests/controllers/index.jshint.js","swag-ember/tests/controllers/swagmap.jshint.js","swag-ember/tests/helpers/resolver.js","swag-ember/tests/helpers/resolver.jshint.js","swag-ember/tests/helpers/start-app.js","swag-ember/tests/helpers/start-app.jshint.js","swag-ember/tests/models/skill.jshint.js","swag-ember/tests/models/swagifact.jshint.js","swag-ember/tests/models/swagmap.jshint.js","swag-ember/tests/models/user.jshint.js","swag-ember/tests/router.jshint.js","swag-ember/tests/routes/application.jshint.js","swag-ember/tests/routes/index.jshint.js","swag-ember/tests/routes/swagmap.jshint.js","swag-ember/tests/serializers/application.jshint.js","swag-ember/tests/services/current-user.jshint.js","swag-ember/tests/services/lrs.jshint.js","swag-ember/tests/test-helper.js","swag-ember/tests/test-helper.jshint.js","swag-ember/tests/unit/adapters/application-test.js","swag-ember/tests/unit/adapters/application-test.jshint.js","swag-ember/tests/unit/adapters/swagmap-test.js","swag-ember/tests/unit/adapters/swagmap-test.jshint.js","swag-ember/tests/unit/controllers/application-test.js","swag-ember/tests/unit/controllers/application-test.jshint.js","swag-ember/tests/unit/controllers/index-test.js","swag-ember/tests/unit/controllers/index-test.jshint.js","swag-ember/tests/unit/controllers/swagmap-test.js","swag-ember/tests/unit/controllers/swagmap-test.jshint.js","swag-ember/tests/unit/models/skill-test.js","swag-ember/tests/unit/models/skill-test.jshint.js","swag-ember/tests/unit/models/swagifact-test.js","swag-ember/tests/unit/models/swagifact-test.jshint.js","swag-ember/tests/unit/models/user-test.js","swag-ember/tests/unit/models/user-test.jshint.js","swag-ember/tests/unit/routes/application-test.js","swag-ember/tests/unit/routes/application-test.jshint.js","swag-ember/tests/unit/routes/index-test.js","swag-ember/tests/unit/routes/index-test.jshint.js","swag-ember/tests/unit/routes/swagmap-test.js","swag-ember/tests/unit/routes/swagmap-test.jshint.js","swag-ember/tests/unit/services/current-user-test.js","swag-ember/tests/unit/services/current-user-test.jshint.js","swag-ember/tests/unit/services/lrs-test.js","swag-ember/tests/unit/services/lrs-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('swag-ember/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTAdapter.extend({\n    namespace: 'api',\n    shouldReloadAll: function shouldReloadAll() {\n      return false;\n    }\n  });\n\n});","define('swag-ember/adapters/swagmap', ['exports', 'swag-ember/adapters/application'], function (exports, ApplicationAdapter) {\n\n  'use strict';\n\n  exports['default'] = ApplicationAdapter['default'].extend({\n    //namespace: 'api'\n    urlForFindRecord: function urlForFindRecord() {\n      return 'https://rawgit.com/tunapanda/swagmaps/3285ac0826815078f49b67520509b045f826fcca/PythonExample/v2.0.json';\n    },\n    urlForFindAll: function urlForFindAll() {\n      return 'https://rawgit.com/tunapanda/swagmaps/3285ac0826815078f49b67520509b045f826fcca/PythonExample/v2.0.json';\n    }\n  });\n\n});","define('swag-ember/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'swag-ember/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('swag-ember/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'swag-ember/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('swag-ember/components/swag-map', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  /* global d3 */\n  Array.prototype.containsEvery = function (values) {\n    var _this = this;\n\n    return values.every(function (value) {\n      return _this.contains(value);\n    });\n  };\n\n  Array.prototype.containsAny = function (values) {\n    var _this2 = this;\n\n    return values.any(function (value) {\n      return _this2.contains(value);\n    });\n  };\n\n  exports['default'] = Ember['default'].Component.extend(Ember['default'].Evented, {\n    classNames: ['swag-map'],\n\n    swagifacts: [],\n    nodes: [],\n    links: [],\n\n    skillsInMap: [],\n\n    skills: (function () {\n      var skills = [];\n      this.get('swagifacts').forEach(function (swagifact) {\n        skills.addObjects(swagifact.get('provides'));\n      });\n      return skills;\n    }).property('swagifacts.@each.provides'),\n\n    wantedSkills: Ember['default'].computed.filterBy('skills', 'wanted', true),\n\n    skillsNotInMap: Ember['default'].computed.setDiff('wantedSkills', 'skillsInMap'),\n\n    d3data: (function () {\n      var _this3 = this;\n\n      var lastNodeAdded = undefined;\n      this.get('swagifacts').setEach('inMap', false);\n      this.get('swagifacts').setEach('dependenciesMet', true);\n\n      function handleSwagifact(swagifact) {\n        var containsWantedSkills = Array.prototype.containsAny.call(swagifact.get('provides'), this.get('skillsNotInMap'));\n        var dependenciesMet = Array.prototype.containsEvery.call(this.get('skillsInMap'), swagifact.get('requires'));\n\n        if (containsWantedSkills && dependenciesMet) {\n          var node = { name: swagifact.get('name'), model: swagifact };\n          this.get('nodes').addObject(node);\n          swagifact.set('inMap', true);\n          swagifact.set('dependenciesMet', true);\n          this.get('skillsInMap').addObjects(swagifact.get('provides'));\n          this.get('links').addObject({ source: lastNodeAdded, target: node });\n          console.log('node added %s', swagifact.get('name'));\n          console.log(this.get('skillsNotInMap.length'));\n          lastNodeAdded = node;\n        }\n        if (swagifact.get('provides.length') > 0 && !dependenciesMet) {\n          swagifact.set('dependenciesMet', false);\n        }\n      }\n\n      Ember['default'].run.schedule('actions', function () {\n        var swagifacts = _this3.get('swagifacts');\n\n        _this3.set('skillsInMap', []);\n        _this3.set('nodes', []);\n        _this3.set('links', []);\n\n        console.log('want %d skills', _this3.get('wantedSkills.length'));\n\n        var start = { name: 'start', fixed: true, x: 20, y: 20 };\n        _this3.get('nodes').push(start);\n\n        lastNodeAdded = start;\n        var i = 0; // prevent infinate loop while working on this\n        while (_this3.get('skillsNotInMap.length') > 0 && i < 20) {\n          swagifacts.forEach(handleSwagifact.bind(_this3));\n          i++;\n        }\n\n        _this3.get('nodes.lastObject').fixed = true;\n        _this3.get('nodes.lastObject').x = 900 - 100;\n        _this3.get('nodes.lastObject').y = 500 - 20;\n      });\n    }).observes('wantedSkills.[]').on('init'),\n\n    /**\n     * Set up svg and trigger inital drawing\n     *\n     * @method didInsertElement\n     *\n     */\n    didInsertElement: function didInsertElement() {\n      var _this4 = this;\n\n      console.log('swagifacts loaded: %d', this.get('swagifacts.length'));\n\n      Ember['default'].run(function () {\n        return _this4.draw();\n      });\n    },\n\n    draw: function draw() {\n      this.$('svg').replaceWith('<svg />');\n      var elem = this.$('svg')[0];\n      var svg = d3.select(elem).attr('width', 900).attr('height', 500);\n      this.set('svg', svg);\n\n      // Per-type markers, as they don't inherit styles.\n      svg.append(\"defs\").selectAll(\"marker\").data(['test']).enter().append(\"marker\").attr(\"id\", function (d) {\n        return d;\n      }).attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 15).attr(\"refY\", -1.5).attr(\"markerWidth\", 10).attr(\"markerHeight\", 10).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\");\n\n      var force = d3.layout.force().nodes(this.get('nodes')).links(this.get('links')).size([900, 500]).linkDistance(100).charge(-100).on(\"tick\", this.tick.bind(this)).start();\n\n      this.set('force', force);\n    },\n\n    redraw: (function () {\n      var _this5 = this;\n\n      Ember['default'].run.schedule('actions', function () {\n        // this.get('force').nodes(this.get('nodes'))\n        // .links(this.get('links')).start();\n        // this.propertyDidChange('force');\n        _this5.draw();\n      });\n    }).observes('nodes', 'links'),\n\n    path: (function () {\n      return this.get('svg').append(\"g\").selectAll(\"path\").data(this.get('force').links()).enter().append(\"path\").attr(\"class\", function () {\n        return \"link\";\n      }).attr(\"marker-end\", function () {\n        return \"url(\" + window.location.pathname + \"#test)\";\n      });\n    }).property('force'),\n\n    circle: (function () {\n      return this.get('svg').append(\"g\").selectAll(\"circle\").data(this.get('force').nodes()).enter().append(\"circle\").attr(\"class\", function (d) {\n        return \"node-level\" + d.level;\n      }).attr(\"r\", 10).on('mouseover', (function (d) {\n        this.set('currentSwagifact', d.model);\n      }).bind(this)).call(this.get('force').drag);\n    }).property('force'),\n\n    text: (function () {\n      return this.get('svg').append(\"g\").selectAll(\"text\").data(this.get('force').nodes()).enter().append(\"text\").attr(\"x\", 8).attr(\"y\", \".81em\").text(function (d) {\n        return d.name;\n      });\n    }).property('force'),\n\n    tick: function tick() {\n      this.get('path').attr(\"d\", linkArc);\n      this.get('circle').attr(\"transform\", transform);\n      this.get('text').attr(\"transform\", transform);\n\n      // var k = 6 * e.alpha;\n      // this.get('nodes.lastObject').x += 10 * k;\n\n      function linkArc(d) {\n        var dx = d.target.x - d.source.x,\n            dy = d.target.y - d.source.y,\n            dr = dx * dx + dy * dy;\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\n      }\n\n      function transform(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      }\n    }\n\n  });\n\n});","define('swag-ember/components/swag-swagifact', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    currentUser: Ember['default'].inject.service('current-user'),\n    lrs: Ember['default'].inject.service('lrs'),\n\n    tagName: 'li',\n    classNames: ['swagifact'],\n    classNameBindings: ['completed', 'available'],\n\n    /**\n     * Whether this swagifact has been completed\n     *\n     * @method computed\n     *\n     * @return {boolean}\n     */\n\n    completed: Ember['default'].computed('currentUser.model.completed.[]', function () {\n      return this.get('currentUser') ? this.get('currentUser').hasCompleted(this.get('item')) : false;\n    }),\n\n    /**\n     * Whether the current user has the skills available to be able to attempt this\n     *\n     * @method computed\n     *\n     * @return {boolean}\n     */\n\n    available: Ember['default'].computed('item.requires.[]', 'currentUser.model.completed.[]', function () {\n      var _this = this;\n\n      if (this.get('item.requires.length') === 0) {\n        return true;\n      }\n      return this.get('item.requires') ? this.get('item.requires').every(function (skill) {\n        return _this.get('currentUser').hasSkill(skill);\n      }) : [];\n    }),\n\n    /**\n     * Wraps requires with whether current user has that skill\n     *\n     * @method computed\n     *\n     * @return {boolean}\n     */\n\n    requires: Ember['default'].computed('item.requires.[]', 'currentUser.model.skills.[]', function () {\n      var _this2 = this;\n\n      return this.get('item.requires') ? this.get('item.requires').map(function (skill) {\n        return Ember['default'].Object.create({ completed: _this2.get('currentUser').hasSkill(skill), name: skill.get('name') });\n      }) : [];\n    }),\n\n    /**\n    * Wraps provides with whether current user has that skill\n     *\n     * @method computed\n     *\n     * @return {boolean}\n     */\n\n    provides: Ember['default'].computed('item.provides.[]', 'currentUser.model.skills.[]', function () {\n      var _this3 = this;\n\n      return this.get('item.provides') ? this.get('item.provides').map(function (skill) {\n        return Ember['default'].Object.create({ completed: _this3.get('currentUser').hasSkill(skill), name: skill.get('name') });\n      }) : [];\n    }),\n\n    actions: {\n      sendCompleted: function sendCompleted() {\n        this.get('lrs').sendCompleted(this.get('item'));\n      }\n    },\n\n    /**\n     * Computed transform attribute\n     *\n     * @method transform\n     */\n\n    style: Ember['default'].computed('item.x', 'item.y', function () {\n      var style = 'transform:translate(';\n\n      style += '' + (this.get('item.x') || 0) + 'px,';\n      style += '' + (this.get('item.y') || 0) + 'px);';\n\n      return Ember['default'].String.htmlSafe(style);\n    })\n\n  });\n\n});","define('swag-ember/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    currentUser: Ember['default'].inject.service('current-user'),\n    index: Ember['default'].inject.controller('index'),\n    swagmap: Ember['default'].inject.controller('swagmap'),\n    lrs: Ember['default'].inject.service('lrs'),\n    actions: {\n      logOut: function logOut() {\n        this.get('currentUser').logOut();\n      },\n      sessionAuthenticationSucceded: function sessionAuthenticationSucceded() {}\n    },\n\n    swagmaps: (function () {\n      return this.store.peekAll('swagmap');\n    }).property('index.model', 'swagmap.model')\n  });\n\n});","define('swag-ember/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('swag-ember/controllers/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('swag-ember/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('swag-ember/controllers/swagmap', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    currentUser: Ember['default'].inject.service('current-user'),\n    actions: {\n      swagifactHover: function swagifactHover(swagifact) {\n        this.set('currentSwagifact', swagifact);\n      }\n    },\n\n    skills: Ember['default'].computed('model.swagifacts', function () {\n      var skills = Ember['default'].A();\n      this.get('model.swagifacts').forEach(function (swagifact) {\n        skills.addObjects(swagifact.get('provides'));\n      });\n      return skills;\n    }),\n\n    allSkillsWanted: Ember['default'].computed('skills.@each.wanted', {\n      set: function set(key, value) {\n        if (value === true) {\n          return this.get('skills').setEach('wanted', true);\n        }\n\n        this.get('skills').setEach('wanted', false);\n      },\n      get: function get() {\n        if (this.get('skills').every(function (skill) {\n          return skill.get('wanted') === true;\n        })) return true;\n        return false;\n      }\n    })\n  });\n\n});","define('swag-ember/helpers/fa-icon', ['exports', 'ember-cli-font-awesome/helpers/fa-icon'], function (exports, fa_icon) {\n\n\t'use strict';\n\n\n\n\texports['default'] = fa_icon['default'];\n\texports.faIcon = fa_icon.faIcon;\n\n});","define('swag-ember/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'swag-ember/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('swag-ember/initializers/export-application-global', ['exports', 'ember', 'swag-ember/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('swag-ember/models/skill', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr(),\n    wanted: DS['default'].attr({ defaultValue: true })\n  });\n\n});","define('swag-ember/models/swagifact', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr(),\n    description: DS['default'].attr(),\n    provides: DS['default'].hasMany('skill'),\n    requires: DS['default'].hasMany('skill'),\n    inMap: DS['default'].attr(),\n    dependenciesMet: DS['default'].attr(),\n    link: DS['default'].attr()\n  });\n\n});","define('swag-ember/models/swagmap', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var swagmap = DS['default'].Model.extend({\n    name: DS['default'].attr(),\n    description: DS['default'].attr(),\n    swagifacts: DS['default'].hasMany('swagifact')\n  });\n\n  exports['default'] = swagmap;\n\n});","define('swag-ember/models/user', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    email: DS['default'].attr(),\n    completed: DS['default'].hasMany('swagifact'),\n    skills: DS['default'].hasMany('skill')\n  });\n\n});","define('swag-ember/router', ['exports', 'ember', 'swag-ember/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('swagmap', { path: '/swagmap/:swagmap_id' });\n  });\n\n  exports['default'] = Router;\n\n});","define('swag-ember/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend();\n\n});","define('swag-ember/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.findAll('swagmap');\n    }\n  });\n\n});","define('swag-ember/routes/swagmap', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    currentUser: Ember['default'].inject.service('current-user'),\n    lrs: Ember['default'].inject.service('lrs'),\n\n    afterModel: function afterModel(model) {\n      var _this = this;\n\n      // contact lrs\n      return Ember['default'].RSVP.all(model.get('swagifacts').map(function (swagifact) {\n        return _this.checkIfComplete(swagifact);\n      }));\n    },\n\n    /**\n     * Contact the LRS and find out if the swagifacts have been competed\n     *\n     * @method checkIfComplete\n     * @param  Model        model   swagifact model\n     */\n\n    checkIfComplete: function checkIfComplete(swagifact) {\n      return this.get('lrs').syncComplete(swagifact);\n    }\n  });\n\n});","define('swag-ember/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTSerializer.extend({\n    normalize: function normalize(model, hash, prop) {\n      hash.link = hash.id;\n      hash.id = hash.id.split('/').pop();\n      hash.name = hash.definition.name['en-US'];\n      hash.description = hash.definition.description ? hash.definition.description['en-US'] : '';\n      delete hash.definition;\n\n      if (hash.swagifacts) {\n        hash.swagifacts = hash.swagifacts.map(function (swagifact) {\n          return swagifact.split('/').pop();\n        });\n      }\n\n      if (hash.requires) {\n        hash.requires = hash.requires.map(function (skill) {\n          return skill.split('/').pop();\n        });\n      }\n\n      if (hash.provides) {\n        hash.provides = hash.provides.map(function (skill) {\n          return skill.split('/').pop();\n        });\n      }\n      return this._super(model, hash, prop);\n    },\n    normalizeFindManyResponse: function normalizeFindManyResponse(store, primaryModelClass, payload, id, requestType) {\n\n      payload.swagmaps = [payload.swagmap];\n      delete payload.swagmap;\n\n      return this['super'](store, primaryModelClass, payload, id, requestType);\n    }\n  });\n\n});","define('swag-ember/services/current-user', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Service.extend({\n    /**\n     * initializes current user, loaded from localstorage\n     *\n     * @method init\n     *\n     */\n\n    init: function init() {\n      this.set('email', window.localStorage.getItem('LRS:email'));\n    },\n\n    saveEmail: Ember['default'].observer('email', function () {\n      if (window.localStorage) window.localStorage.setItem('LRS:email', this.get('email'));\n    }),\n\n    /**\n     * helper to determine if a user has compelted a given swagifact\n     *\n     * @method hasCompleted\n     *\n     */\n\n    hasCompleted: function hasCompleted(swagifact) {\n      if (this.get('model')) {\n        return !!this.get('model.completed').findBy('id', swagifact.get('id'));\n      }\n      return false;\n    },\n\n    /**\n     * helper to determine if a user has compelted a given skill\n     *\n     * @method hasCompleted\n     *\n     */\n\n    hasSkill: function hasSkill(skill) {\n      if (this.get('model')) {\n        return !!this.get('model.skills').findBy('id', skill.get('id'));\n      }\n      return false;\n    }\n  });\n\n});","define('swag-ember/services/lrs', ['exports', 'ember', 'swag-ember/config/environment'], function (exports, Ember, ENV) {\n\n  'use strict';\n\n  var tincan = new TinCan({\n    recordStores: [{\n      endpoint: ENV['default'].APP.xAPIEndpoint,\n      username: ENV['default'].APP.xAPIUsername,\n      password: ENV['default'].APP.xAPIPassword,\n      allowFail: false\n    }]\n  });\n\n  /**\n   * Serivce that can be injected into any object that needs acces to the LRS\n   *\n   * @extends Ember.Service\n   */\n\n  exports['default'] = Ember['default'].Service.extend({\n    currentUser: Ember['default'].inject.service('current-user'),\n    tincan: tincan,\n\n    /**\n     * agent is bound to the current logged in user\n     *\n     * @method agent\n     */\n\n    agent: Ember['default'].computed('currentUser.model.content.email', function () {\n      return new TinCan.Agent({\n        'mbox': 'mailto:' + ENV['default'].APP.agentEmailOverride ? ENV['default'].APP.agentEmailOverride : this.get('currentUser.model.content.email')\n      });\n    }),\n\n    /**\n     * tell LRS that a swagifact has been completed\n     *\n     * @method sendCompleted\n     *\n     */\n\n    sendCompleted: function sendCompleted(swagifact) {\n      var _this = this;\n\n      tincan.sendStatement({\n        verb: {\n          id: 'http://adlnet.gov/expapi/verbs/completed'\n        },\n        actor: this.get('agent'),\n        target: {\n          id: swagifact.get('xAPIID')\n        }\n      }, function (res) {\n        if (res.err) return;\n\n        _this.get('currentUser.model.completed').addObject(swagifact);\n        _this.get('currentUser.model.skills').addObjects(swagifact.get('provides'));\n        _this.get('currentUser.model').save();\n      });\n    },\n\n    /**\n     * find out if swagifact has been completed, updates model store if it has\n     *\n     * @method syncComplete\n     *\n     */\n\n    syncComplete: function syncComplete(swagifact) {\n      var _this2 = this;\n\n      new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        var activity = new TinCan.Activity({\n          \"id\": swagifact.get('xAPIID')\n        });\n\n        _this2.get('tincan').getStatements({\n          params: {\n            \"agent\": _this2.get('lrs.agent'),\n            \"activity\": activity\n          },\n          callback: function callback(err, res) {\n            if (err !== null) return reject();\n            res.statements.forEach(function (statement) {\n              if (statement.verb.id === 'http://adlnet.gov/expapi/verbs/completed') {\n                _this2.get('currentUser.model.completed').addObject(swagifact);\n                _this2.get('currentUser.model.skills').addObjects(swagifact.get('provides'));\n              }\n            });\n            _this2.get('currentUser.model').save();\n            resolve();\n          }\n        });\n      });\n    }\n  });\n\n});","define('swag-ember/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 2,\n              \"column\": 2\n            },\n            \"end\": {\n              \"line\": 2,\n              \"column\": 58\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/application.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Swag Map Viewer\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.0.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 9,\n                \"column\": 10\n              },\n              \"end\": {\n                \"line\": 9,\n                \"column\": 78\n              }\n            },\n            \"moduleName\": \"swag-ember/templates/application.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"swagmap.name\",[\"loc\",[null,[9,62],[9,78]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 8,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 10,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/application.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"swagmap\",[\"get\",\"swagmap\",[\"loc\",[null,[9,31],[9,38]]]]],[\"class\",\"dropdown-item\"],0,null,[\"loc\",[null,[9,10],[9,90]]]]\n        ],\n        locals: [\"swagmap\"],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@2.0.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 24,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"swag-ember/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"navbar navbar-light bg-faded\");\n        dom.setAttribute(el1,\"role\",\"navigation\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"btn-group\");\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"type\",\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-secondary dropdown-toggle\");\n        dom.setAttribute(el3,\"data-toggle\",\"dropdown\");\n        dom.setAttribute(el3,\"aria-haspopup\",\"true\");\n        dom.setAttribute(el3,\"aria-expanded\",\"false\");\n        var el4 = dom.createTextNode(\"\\n        Quick Switch\\n      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"dropdown-menu\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"form\");\n        dom.setAttribute(el2,\"class\",\"form-inline navbar-form pull-right\");\n        var el3 = dom.createTextNode(\"\\n   \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n   \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-success-outline\");\n        dom.setAttribute(el3,\"type\",\"submit\");\n        var el4 = dom.createTextNode(\"Save\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"main\");\n        dom.setAttribute(el1,\"class\",\"container-fluid\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [5]);\n        var element2 = dom.childAt(element1, [3]);\n        var morphs = new Array(5);\n        morphs[0] = dom.createMorphAt(element0,1,1);\n        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3, 3]),1,1);\n        morphs[2] = dom.createMorphAt(element1,1,1);\n        morphs[3] = dom.createElementMorph(element2);\n        morphs[4] = dom.createMorphAt(dom.childAt(fragment, [2, 1]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"index\"],[\"class\",\"navbar-brand\"],0,null,[\"loc\",[null,[2,2],[2,70]]]],\n        [\"block\",\"each\",[[\"get\",\"swagmaps\",[\"loc\",[null,[8,16],[8,24]]]]],[],1,null,[\"loc\",[null,[8,8],[10,17]]]],\n        [\"inline\",\"input\",[],[\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"currentUser.email\",[\"loc\",[null,[14,17],[14,34]]]]],[],[]],\"class\",\"form-control\",\"placeholder\",\"LRS Email\"],[\"loc\",[null,[14,3],[14,81]]]],\n        [\"element\",\"action\",[\"saveEmail\"],[],[\"loc\",[null,[15,57],[15,79]]]],\n        [\"content\",\"outlet\",[\"loc\",[null,[21,4],[21,14]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('swag-ember/templates/components/login-form', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.0.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 26,\n            \"column\": 8\n          }\n        },\n        \"moduleName\": \"swag-ember/templates/components/login-form.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        dom.setAttribute(el1,\"class\",\"text-center\");\n        var el2 = dom.createTextNode(\"Please Login to Proceed!\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"small-6 small-centered columns\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"button\");\n        var el4 = dom.createTextNode(\"Login with Facebook\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [3, 1, 1]);\n        var morphs = new Array(1);\n        morphs[0] = dom.createElementMorph(element0);\n        return morphs;\n      },\n      statements: [\n        [\"element\",\"action\",[\"fbLogin\"],[],[\"loc\",[null,[5,27],[5,47]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('swag-ember/templates/components/swag-map', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.0.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 16,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 18,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"swag-ember/templates/components/swag-map.hbs\"\n          },\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"requires.name\",[\"loc\",[null,[17,18],[17,35]]]]\n          ],\n          locals: [\"requires\"],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.0.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 28,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 30,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"swag-ember/templates/components/swag-map.hbs\"\n          },\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"provides.name\",[\"loc\",[null,[29,18],[29,35]]]]\n          ],\n          locals: [\"provides\"],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 5,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 46,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/components/swag-map.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"aside\");\n          dom.setAttribute(el1,\"class\",\"card card-block\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h3\");\n          dom.setAttribute(el2,\"class\",\"card-title\");\n          var el3 = dom.createTextNode(\"Info: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"table\");\n          dom.setAttribute(el2,\"class\",\"table table-sm\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"tbody\");\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"tr\");\n          var el5 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"td\");\n          dom.setAttribute(el5,\"scope\",\"row\");\n          var el6 = dom.createTextNode(\"\\n          Requires\\n        \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"td\");\n          var el6 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"ul\");\n          var el7 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createComment(\"\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"          \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"tr\");\n          var el5 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"td\");\n          dom.setAttribute(el5,\"scope\",\"row\");\n          var el6 = dom.createTextNode(\"\\n          Provides\\n        \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"td\");\n          var el6 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"ul\");\n          var el7 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createComment(\"\");\n          dom.appendChild(el6, el7);\n          var el7 = dom.createTextNode(\"          \");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"tr\");\n          var el5 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"td\");\n          dom.setAttribute(el5,\"scope\",\"row\");\n          var el6 = dom.createTextNode(\"\\n          Link\\n        \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createElement(\"td\");\n          var el6 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el5, el6);\n          var el6 = dom.createElement(\"a\");\n          var el7 = dom.createComment(\"\");\n          dom.appendChild(el6, el7);\n          dom.appendChild(el5, el6);\n          var el6 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el5, el6);\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [0]);\n          var element1 = dom.childAt(element0, [3, 1]);\n          var element2 = dom.childAt(element1, [5, 3, 1]);\n          var morphs = new Array(5);\n          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          morphs[1] = dom.createMorphAt(dom.childAt(element1, [1, 3, 1]),1,1);\n          morphs[2] = dom.createMorphAt(dom.childAt(element1, [3, 3, 1]),1,1);\n          morphs[3] = dom.createAttrMorph(element2, 'href');\n          morphs[4] = dom.createMorphAt(element2,0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"currentSwagifact.name\",[\"loc\",[null,[7,31],[7,56]]]],\n          [\"block\",\"each\",[[\"get\",\"currentSwagifact.requires\",[\"loc\",[null,[16,20],[16,45]]]]],[],0,null,[\"loc\",[null,[16,12],[18,21]]]],\n          [\"block\",\"each\",[[\"get\",\"currentSwagifact.provides\",[\"loc\",[null,[28,20],[28,45]]]]],[],1,null,[\"loc\",[null,[28,12],[30,21]]]],\n          [\"attribute\",\"href\",[\"concat\",[[\"get\",\"currentSwagifact.link\",[\"loc\",[null,[39,21],[39,42]]]]]]],\n          [\"content\",\"currentSwagifact.link\",[\"loc\",[null,[39,46],[39,71]]]]\n        ],\n        locals: [],\n        templates: [child0, child1]\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 46,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 48,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/components/swag-map.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"Hover over swagifact for info.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@2.0.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 49,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"swag-ember/templates/components/swag-map.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        dom.setNamespace(\"http://www.w3.org/2000/svg\");\n        var el1 = dom.createElement(\"svg\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"if\",[[\"get\",\"currentSwagifact\",[\"loc\",[null,[5,6],[5,22]]]]],[],0,1,[\"loc\",[null,[5,0],[48,7]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('swag-ember/templates/components/swag-swagifact', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 14,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 16,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/components/swag-swagifact.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element1 = dom.childAt(fragment, [1]);\n          var morphs = new Array(2);\n          morphs[0] = dom.createAttrMorph(element1, 'class');\n          morphs[1] = dom.createMorphAt(element1,0,0);\n          return morphs;\n        },\n        statements: [\n          [\"attribute\",\"class\",[\"concat\",[[\"subexpr\",\"if\",[[\"get\",\"skill.completed\",[\"loc\",[null,[15,24],[15,39]]]],\"completed\"],[],[\"loc\",[null,[15,19],[15,53]]]]]]],\n          [\"content\",\"skill.name\",[\"loc\",[null,[15,55],[15,69]]]]\n        ],\n        locals: [\"skill\"],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 21,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 23,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/components/swag-swagifact.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(2);\n          morphs[0] = dom.createAttrMorph(element0, 'class');\n          morphs[1] = dom.createMorphAt(element0,0,0);\n          return morphs;\n        },\n        statements: [\n          [\"attribute\",\"class\",[\"concat\",[[\"subexpr\",\"if\",[[\"get\",\"skill.completed\",[\"loc\",[null,[22,24],[22,39]]]],\"completed\"],[],[\"loc\",[null,[22,19],[22,53]]]]]]],\n          [\"content\",\"skill.name\",[\"loc\",[null,[22,55],[22,69]]]]\n        ],\n        locals: [\"skill\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@2.0.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 33,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"swag-ember/templates/components/swag-swagifact.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"swag-icon\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"circle\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"swagifact-name\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"swagifact-meta\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"strong\");\n        var el5 = dom.createTextNode(\"description:\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"strong\");\n        var el5 = dom.createTextNode(\"completed:\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"strong\");\n        var el5 = dom.createTextNode(\"requires:\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"requires\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"strong\");\n        var el5 = dom.createTextNode(\"provides:\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"provides\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"strong\");\n        var el5 = dom.createTextNode(\"Send Verb to Learninglocker\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\":\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        var el6 = dom.createElement(\"button\");\n        dom.setAttribute(el6,\"type\",\"button small\");\n        var el7 = dom.createTextNode(\"Completed\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element2 = dom.childAt(fragment, [0]);\n        var element3 = dom.childAt(fragment, [2]);\n        var element4 = dom.childAt(element3, [1]);\n        var element5 = dom.childAt(element4, [9, 2, 1, 0]);\n        var morphs = new Array(8);\n        morphs[0] = dom.createAttrMorph(element2, 'style');\n        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]),1,1);\n        morphs[2] = dom.createAttrMorph(element3, 'style');\n        morphs[3] = dom.createMorphAt(dom.childAt(element4, [1, 2]),0,0);\n        morphs[4] = dom.createMorphAt(dom.childAt(element4, [3]),2,2);\n        morphs[5] = dom.createMorphAt(dom.childAt(element4, [5, 2]),1,1);\n        morphs[6] = dom.createMorphAt(dom.childAt(element4, [7, 2]),1,1);\n        morphs[7] = dom.createElementMorph(element5);\n        return morphs;\n      },\n      statements: [\n        [\"attribute\",\"style\",[\"get\",\"style\",[\"loc\",[null,[1,31],[1,36]]]]],\n        [\"content\",\"item.name\",[\"loc\",[null,[4,4],[4,17]]]],\n        [\"attribute\",\"style\",[\"get\",\"style\",[\"loc\",[null,[8,36],[8,41]]]]],\n        [\"content\",\"item.description\",[\"loc\",[null,[10,41],[10,61]]]],\n        [\"content\",\"completed\",[\"loc\",[null,[11,36],[11,49]]]],\n        [\"block\",\"each\",[[\"get\",\"requires\",[\"loc\",[null,[14,16],[14,24]]]]],[],0,null,[\"loc\",[null,[14,8],[16,17]]]],\n        [\"block\",\"each\",[[\"get\",\"provides\",[\"loc\",[null,[21,16],[21,24]]]]],[],1,null,[\"loc\",[null,[21,8],[23,17]]]],\n        [\"element\",\"action\",[\"sendCompleted\"],[],[\"loc\",[null,[28,40],[28,66]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('swag-ember/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.0.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 5,\n                \"column\": 4\n              },\n              \"end\": {\n                \"line\": 5,\n                \"column\": 74\n              }\n            },\n            \"moduleName\": \"swag-ember/templates/index.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"swagmap.name\",[\"loc\",[null,[5,58],[5,74]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 4,\n              \"column\": 2\n            },\n            \"end\": {\n              \"line\": 6,\n              \"column\": 2\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/index.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"swagmap\",[\"get\",\"swagmap\",[\"loc\",[null,[5,25],[5,32]]]]],[\"class\",\"list-group-item\"],0,null,[\"loc\",[null,[5,4],[5,86]]]]\n        ],\n        locals: [\"swagmap\"],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@2.0.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 9,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"swag-ember/templates/index.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-md-12\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        var el3 = dom.createTextNode(\"Select A Swag Map\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"list-group\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 3]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"each\",[[\"get\",\"model\",[\"loc\",[null,[4,10],[4,15]]]]],[],0,null,[\"loc\",[null,[4,2],[6,11]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('swag-ember/templates/swagmap', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.0.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 33,\n                \"column\": 14\n              },\n              \"end\": {\n                \"line\": 33,\n                \"column\": 54\n              }\n            },\n            \"moduleName\": \"swag-ember/templates/swagmap.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"inline\",\"fa-icon\",[\"tick\"],[],[\"loc\",[null,[33,36],[33,54]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.0.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 33,\n                \"column\": 54\n              },\n              \"end\": {\n                \"line\": 33,\n                \"column\": 81\n              }\n            },\n            \"moduleName\": \"swag-ember/templates/swagmap.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"inline\",\"fa-icon\",[\"times\"],[],[\"loc\",[null,[33,62],[33,81]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 29,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/swagmap.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element1 = dom.childAt(fragment, [1]);\n          var morphs = new Array(4);\n          morphs[0] = dom.createAttrMorph(element1, 'class');\n          morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n          morphs[2] = dom.createMorphAt(dom.childAt(element1, [3]),0,0);\n          morphs[3] = dom.createMorphAt(dom.childAt(element1, [5]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"attribute\",\"class\",[\"concat\",[[\"subexpr\",\"unless\",[[\"get\",\"skill.wanted\",[\"loc\",[null,[30,28],[30,40]]]],\"fade-row\"],[],[\"loc\",[null,[30,19],[30,53]]]]]]],\n          [\"inline\",\"input\",[],[\"type\",\"checkbox\",\"checked\",[\"subexpr\",\"@mut\",[[\"get\",\"skill.wanted\",[\"loc\",[null,[31,46],[31,58]]]]],[],[]]],[\"loc\",[null,[31,14],[31,60]]]],\n          [\"content\",\"skill.name\",[\"loc\",[null,[32,14],[32,28]]]],\n          [\"block\",\"if\",[[\"get\",\"skill.fufilled\",[\"loc\",[null,[33,20],[33,34]]]]],[],0,1,[\"loc\",[null,[33,14],[33,88]]]]\n        ],\n        locals: [\"skill\"],\n        templates: [child0, child1]\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.0.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 45,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 49,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"swag-ember/templates/swagmap.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(3);\n          morphs[0] = dom.createAttrMorph(element0, 'class');\n          morphs[1] = dom.createElementMorph(element0);\n          morphs[2] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"attribute\",\"class\",[\"concat\",[[\"subexpr\",\"unless\",[[\"get\",\"swagifact.inMap\",[\"loc\",[null,[46,28],[46,43]]]],\"fade-row\"],[],[\"loc\",[null,[46,19],[46,56]]]],\" \",[\"subexpr\",\"unless\",[[\"get\",\"swagifact.dependenciesMet\",[\"loc\",[null,[46,66],[46,91]]]],\"table-danger\"],[],[\"loc\",[null,[46,57],[46,108]]]]]]],\n          [\"element\",\"action\",[\"swagifactHover\",[\"get\",\"swagifact\",[\"loc\",[null,[46,136],[46,145]]]]],[\"on\",\"mouseEnter\"],[\"loc\",[null,[46,110],[46,163]]]],\n          [\"content\",\"swagifact.name\",[\"loc\",[null,[47,14],[47,32]]]]\n        ],\n        locals: [\"swagifact\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@2.0.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 63,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"swag-ember/templates/swagmap.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-md-9\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2,\"class\",\"display-4\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-md-3\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createTextNode(\"Skills:\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      Uncheck skills you don't want/need.\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"table\");\n        dom.setAttribute(el3,\"class\",\"table table-sm\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"thead\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"tr\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"th\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"th\");\n        var el7 = dom.createTextNode(\"\\n            Name\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"th\");\n        var el7 = dom.createTextNode(\"\\n            fufilled\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"tbody\");\n        var el5 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Swagifacts\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"table\");\n        dom.setAttribute(el3,\"class\",\"table table-sm\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"tbody\");\n        var el5 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"em\");\n        var el6 = dom.createElement(\"span\");\n        dom.setAttribute(el6,\"style\",\"background-color: #f2dede;\");\n        var el7 = dom.createTextNode(\"red\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\" = unmet skill dependencies\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"em\");\n        var el6 = dom.createElement(\"span\");\n        dom.setAttribute(el6,\"style\",\"opacity: 0.3;\");\n        var el7 = dom.createTextNode(\"grey\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\" = contains no wanted skills\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element2 = dom.childAt(fragment, [0]);\n        var element3 = dom.childAt(fragment, [2]);\n        var element4 = dom.childAt(element3, [1, 5]);\n        var morphs = new Array(5);\n        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]),0,0);\n        morphs[1] = dom.createMorphAt(element2,3,3);\n        morphs[2] = dom.createMorphAt(dom.childAt(element4, [1, 1, 1]),1,1);\n        morphs[3] = dom.createMorphAt(dom.childAt(element4, [3]),1,1);\n        morphs[4] = dom.createMorphAt(dom.childAt(element3, [3, 3, 1]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"model.name\",[\"loc\",[null,[2,24],[2,38]]]],\n        [\"inline\",\"swag-map\",[],[\"swagifacts\",[\"subexpr\",\"@mut\",[[\"get\",\"model.swagifacts\",[\"loc\",[null,[4,24],[4,40]]]]],[],[]],\"currentSwagifact\",[\"subexpr\",\"@mut\",[[\"get\",\"currentSwagifact\",[\"loc\",[null,[4,58],[4,74]]]]],[],[]]],[\"loc\",[null,[4,2],[4,76]]]],\n        [\"inline\",\"input\",[],[\"type\",\"checkbox\",\"checked\",[\"subexpr\",\"@mut\",[[\"get\",\"allSkillsWanted\",[\"loc\",[null,[17,44],[17,59]]]]],[],[]]],[\"loc\",[null,[17,12],[17,61]]]],\n        [\"block\",\"each\",[[\"get\",\"skills\",[\"loc\",[null,[29,14],[29,20]]]]],[],0,null,[\"loc\",[null,[29,6],[35,15]]]],\n        [\"block\",\"each\",[[\"get\",\"model.swagifacts\",[\"loc\",[null,[45,14],[45,30]]]]],[],1,null,[\"loc\",[null,[45,6],[49,15]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('swag-ember/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/adapters/swagmap.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/swagmap.js should pass jshint', function(assert) { \n    assert.ok(true, 'adapters/swagmap.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/components/swag-map.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/swag-map.js should pass jshint', function(assert) { \n    assert.ok(true, 'components/swag-map.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/components/swag-swagifact.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/swag-swagifact.js should pass jshint', function(assert) { \n    assert.ok(true, 'components/swag-swagifact.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/controllers/index.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/index.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/index.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/controllers/swagmap.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/swagmap.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/swagmap.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/helpers/resolver', ['exports', 'ember/resolver', 'swag-ember/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('swag-ember/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/helpers/start-app', ['exports', 'ember', 'swag-ember/app', 'swag-ember/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('swag-ember/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/models/skill.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/skill.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/skill.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/models/swagifact.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/swagifact.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/swagifact.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/models/swagmap.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/swagmap.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/swagmap.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/user.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/index.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/routes/swagmap.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/swagmap.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/swagmap.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - serializers');\n  QUnit.test('serializers/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/services/current-user.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - services');\n  QUnit.test('services/current-user.js should pass jshint', function(assert) { \n    assert.ok(true, 'services/current-user.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/services/lrs.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - services');\n  QUnit.test('services/lrs.js should pass jshint', function(assert) { \n    assert.ok(true, 'services/lrs.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/test-helper', ['swag-ember/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('swag-ember/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('swag-ember/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/adapters');\n  QUnit.test('unit/adapters/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/adapters/swagmap-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:swagmap', 'Unit | Adapter | swagmap', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('swag-ember/tests/unit/adapters/swagmap-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/adapters');\n  QUnit.test('unit/adapters/swagmap-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/adapters/swagmap-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('swag-ember/tests/unit/controllers/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/application-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/controllers/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('swag-ember/tests/unit/controllers/index-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/index-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/index-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/controllers/swagmap-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:swagmap', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('swag-ember/tests/unit/controllers/swagmap-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/swagmap-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/swagmap-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/models/skill-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('skill', 'Unit | Model | skill', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('swag-ember/tests/unit/models/skill-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/skill-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/skill-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/models/swagifact-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('swagifact', 'Unit | Model | swagifact', {\n    // Specify the other units that are required for this test.\n    needs: ['model:skill', 'model:swagmap', 'service:current-user']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('swag-ember/tests/unit/models/swagifact-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/swagifact-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/swagifact-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/models/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: ['model:swagifact', 'model:skill']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('swag-ember/tests/unit/models/user-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/user-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/user-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('swag-ember/tests/unit/routes/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/application-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('swag-ember/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/index-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/routes/swagmap-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:swagmap', 'Unit | Route | swagmap', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('swag-ember/tests/unit/routes/swagmap-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/swagmap-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/swagmap-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/services/current-user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('service:current-user', 'Unit | Service | current user', {\n    // Specify the other units that are required for this test.\n    needs: ['model:user']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n});","define('swag-ember/tests/unit/services/current-user-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/services');\n  QUnit.test('unit/services/current-user-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/services/current-user-test.js should pass jshint.'); \n  });\n\n});","define('swag-ember/tests/unit/services/lrs-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('service:lrs', 'Unit | Service | lrs', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n});","define('swag-ember/tests/unit/services/lrs-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/services');\n  QUnit.test('unit/services/lrs-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/services/lrs-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('swag-ember/config/environment', ['ember'], function(Ember) {\n  var prefix = 'swag-ember';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"swag-ember/tests/test-helper\");\n} else {\n  require(\"swag-ember/app\")[\"default\"].create({\"xAPIEndpoint\":\"http://learninglocker.swag.testing.tunapanda.org/data/xAPI/\",\"xAPIUsername\":\"caae95f54d6545c76fc289f02a3c1d51c455f7e6\",\"xAPIPassword\":\"40cb0287f95189298729f6ccc36f6277840604ad\",\"agentEmailOverride\":\"jake@tunapanda.org\",\"useFixtures\":true,\"name\":\"swag-ember\",\"version\":\"0.0.0+31c8ec15\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxhlardA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"swag-ember.js"}